<%- include('./partials/header') %>

<div class="row justify-content-center mt-5">
  <div class="col-md-6">
    <div class="card shadow-md border-0">
      <div class="card-header bg-gradient-primary text-white">
        <h4 class="mb-0">Welcome to LocAI</h4>
      </div>
      <div class="card-body p-4">
        <h5 class="mb-4">Login to Your Account</h5>
        <form id="loginForm">
          <div class="alert alert-danger d-none" id="loginError"></div>
          
          <div class="mb-3">
            <label for="email" class="form-label">Email Address</label>
            <div class="input-group">
              <span class="input-group-text"><i class="fas fa-envelope"></i></span>
              <input type="email" class="form-control" id="email" name="email" required autocomplete="email">
            </div>
          </div>
          
          <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <div class="input-group">
              <span class="input-group-text"><i class="fas fa-lock"></i></span>
              <input type="password" class="form-control" id="password" name="password" required autocomplete="current-password">
              <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                <i class="fas fa-eye"></i>
              </button>
            </div>
          </div>
          
          <div class="mb-3 form-check">
            <input type="checkbox" class="form-check-input" id="rememberMe">
            <label class="form-check-label" for="rememberMe">Remember me</label>
          </div>
          
          <button type="submit" class="btn btn-primary w-100" id="loginButton">
            <span class="spinner-border spinner-border-sm d-none me-2" id="loginSpinner" role="status" aria-hidden="true"></span>
            Login
          </button>
        </form>
      </div>
      <div class="card-footer text-center py-3">
        <p class="mb-0">Don't have an account? <a href="/register" class="text-primary">Register Here</a></p>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const loginForm = document.getElementById('loginForm');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const errorElement = document.getElementById('loginError');
    const loginButton = document.getElementById('loginButton');
    const loginSpinner = document.getElementById('loginSpinner');
    const togglePassword = document.getElementById('togglePassword');
    
    // Show/hide password
    togglePassword.addEventListener('click', function() {
      const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordInput.setAttribute('type', type);
      togglePassword.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
    });
    
    loginForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Reset error state
      errorElement.classList.add('d-none');
      errorElement.textContent = '';
      
      // Show loading state
      loginButton.disabled = true;
      loginSpinner.classList.remove('d-none');
      
      const email = emailInput.value.trim();
      const password = passwordInput.value;
      
      // Basic validation
      if (!email || !password) {
        errorElement.textContent = 'Please enter both email and password.';
        errorElement.classList.remove('d-none');
        loginButton.disabled = false;
        loginSpinner.classList.add('d-none');
        return;
      }
      
      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email, password })
        });
        
        const data = await response.json();
        
        if (response.ok) {
          // Save user data
          localStorage.setItem('token', data.user.token);
          localStorage.setItem('user', JSON.stringify({
            id: data.user._id,
            email: data.user.email,
            businessName: data.user.businessName
          }));
          
          // Set authentication cookie
          document.cookie = 'isAuthenticated=true; path=/; max-age=2592000'; // 30 days
          
          // Show success message briefly before redirecting
          errorElement.textContent = 'Login successful! Redirecting...';
          errorElement.classList.remove('d-none', 'alert-danger');
          errorElement.classList.add('alert-success');
          
          // Redirect to dashboard after short delay
          setTimeout(() => {
            window.location.href = '/';
          }, 500);
        } else {
          // Show error message
          errorElement.textContent = data.message || 'Login failed. Please check your credentials.';
          errorElement.classList.remove('d-none');
          loginButton.disabled = false;
          loginSpinner.classList.add('d-none');
        }
      } catch (error) {
        console.error('Login error:', error);
        errorElement.textContent = 'Connection error. Please try again later.';
        errorElement.classList.remove('d-none');
        loginButton.disabled = false;
        loginSpinner.classList.add('d-none');
      }
    });
  });
</script>

<%- include('./partials/footer') %> 