<%- include('./partials/header') %>

<div class="row justify-content-center mt-4 mb-5">
  <div class="col-md-8">
    <div class="card shadow-md border-0">
      <div class="card-header bg-gradient-primary text-white">
        <h4 class="mb-0">Join LocAI - Business Registration</h4>
      </div>
      <div class="card-body p-4">
        <form id="registerForm">
          <div class="alert alert-danger d-none" id="registerError"></div>
          
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="businessName" class="form-label">Business Name</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-store"></i></span>
                  <input type="text" class="form-control" id="businessName" name="businessName" required>
                </div>
              </div>
            </div>
            
            <div class="col-md-6">
              <div class="mb-3">
                <label for="email" class="form-label">Email Address</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                  <input type="email" class="form-control" id="email" name="email" required autocomplete="email">
                </div>
              </div>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-lock"></i></span>
                  <input type="password" class="form-control" id="password" name="password" minlength="6" required autocomplete="new-password">
                  <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                    <i class="fas fa-eye"></i>
                  </button>
                </div>
                <div class="password-strength mt-1" id="passwordStrength">
                  <div class="progress" style="height: 5px;">
                    <div class="progress-bar bg-danger" id="passwordStrengthBar" role="progressbar" style="width: 0%"></div>
                  </div>
                  <small class="form-text text-muted">Password must be at least 6 characters long</small>
                </div>
              </div>
            </div>
            
            <div class="col-md-6">
              <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm Password</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-lock"></i></span>
                  <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required autocomplete="new-password">
                </div>
                <small class="form-text text-danger d-none" id="passwordMatchError">Passwords do not match</small>
              </div>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="businessType" class="form-label">Business Type</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-briefcase"></i></span>
                  <select class="form-select" id="businessType" name="businessType" required>
                    <option value="" selected disabled>Select business type</option>
                    <option value="retail">Retail</option>
                    <option value="restaurant">Restaurant</option>
                    <option value="salon">Salon</option>
                    <option value="grocery">Grocery Store</option>
                    <option value="bakery">Bakery</option>
                    <option value="other">Other</option>
                  </select>
                </div>
              </div>
            </div>
            
            <div class="col-md-6">
              <div class="mb-3">
                <label for="location" class="form-label">Business Location</label>
                <div class="input-group">
                  <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                  <input type="text" class="form-control" id="location" name="location" required>
                </div>
              </div>
            </div>
          </div>
          
          <div class="mb-4 form-check">
            <input type="checkbox" class="form-check-input" id="termsAgree" required>
            <label class="form-check-label" for="termsAgree">I agree to the <a href="/terms" target="_blank">Terms and Conditions</a> and <a href="/privacy" target="_blank">Privacy Policy</a></label>
          </div>
          
          <button type="submit" class="btn btn-primary w-100" id="registerButton">
            <span class="spinner-border spinner-border-sm d-none me-2" id="registerSpinner" role="status" aria-hidden="true"></span>
            Create Account
          </button>
        </form>
      </div>
      <div class="card-footer text-center py-3">
        <p class="mb-0">Already have an account? <a href="/login" class="text-primary">Login Here</a></p>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const registerForm = document.getElementById('registerForm');
    const businessNameInput = document.getElementById('businessName');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const businessTypeInput = document.getElementById('businessType');
    const locationInput = document.getElementById('location');
    const errorElement = document.getElementById('registerError');
    const registerButton = document.getElementById('registerButton');
    const registerSpinner = document.getElementById('registerSpinner');
    const togglePassword = document.getElementById('togglePassword');
    const passwordStrengthBar = document.getElementById('passwordStrengthBar');
    const passwordMatchError = document.getElementById('passwordMatchError');
    
    // Show/hide password
    togglePassword.addEventListener('click', function() {
      const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordInput.setAttribute('type', type);
      togglePassword.innerHTML = type === 'password' ? '<i class="fas fa-eye"></i>' : '<i class="fas fa-eye-slash"></i>';
    });
    
    // Password strength meter
    passwordInput.addEventListener('input', function() {
      const password = this.value;
      let strength = 0;
      
      if (password.length >= 6) strength += 20;
      if (password.length >= 8) strength += 20;
      if (/[A-Z]/.test(password)) strength += 20;
      if (/[0-9]/.test(password)) strength += 20;
      if (/[^A-Za-z0-9]/.test(password)) strength += 20;
      
      passwordStrengthBar.style.width = strength + '%';
      
      if (strength <= 20) {
        passwordStrengthBar.className = 'progress-bar bg-danger';
      } else if (strength <= 60) {
        passwordStrengthBar.className = 'progress-bar bg-warning';
      } else {
        passwordStrengthBar.className = 'progress-bar bg-success';
      }
    });
    
    // Check if passwords match
    confirmPasswordInput.addEventListener('input', function() {
      if (this.value === passwordInput.value) {
        passwordMatchError.classList.add('d-none');
      } else {
        passwordMatchError.classList.remove('d-none');
      }
    });
    
    registerForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Reset error state
      errorElement.classList.add('d-none');
      errorElement.textContent = '';
      
      // Validate passwords match
      if (passwordInput.value !== confirmPasswordInput.value) {
        errorElement.textContent = 'Passwords do not match';
        errorElement.classList.remove('d-none');
        return;
      }
      
      // Show loading state
      registerButton.disabled = true;
      registerSpinner.classList.remove('d-none');
      
      const businessName = businessNameInput.value.trim();
      const email = emailInput.value.trim();
      const password = passwordInput.value;
      const businessType = businessTypeInput.value;
      const location = locationInput.value.trim();
      
      try {
        const response = await fetch('/api/auth/signup', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            businessName,
            email,
            password,
            businessType,
            location
          })
        });
        
        const data = await response.json();
        
        if (response.ok) {
          // Save user data
          localStorage.setItem('token', data.user.token);
          localStorage.setItem('user', JSON.stringify({
            id: data.user._id,
            email: data.user.email,
            businessName: data.user.businessName
          }));
          
          // Set authentication cookie
          document.cookie = 'isAuthenticated=true; path=/; max-age=2592000'; // 30 days
          
          // Show success message
          errorElement.textContent = 'Registration successful! Redirecting...';
          errorElement.classList.remove('d-none', 'alert-danger');
          errorElement.classList.add('alert-success');
          
          // Redirect to dashboard after short delay
          setTimeout(() => {
            window.location.href = '/';
          }, 1000);
        } else {
          // Show error message
          errorElement.textContent = data.message || 'Registration failed. Please try again.';
          errorElement.classList.remove('d-none');
          registerButton.disabled = false;
          registerSpinner.classList.add('d-none');
        }
      } catch (error) {
        console.error('Registration error:', error);
        errorElement.textContent = 'Connection error. Please try again later.';
        errorElement.classList.remove('d-none');
        registerButton.disabled = false;
        registerSpinner.classList.add('d-none');
      }
    });
  });
</script>

<%- include('./partials/footer') %> 